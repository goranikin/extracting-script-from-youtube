[
  " Even if I see your diff is going to blow up production, I will comment on it and be like, this is going to blow up production and then accept it and be like, yeah, make sure you fix that first, right? This is Jake Bullam. He's a principal engineer or IC8 at Instagram who got promoted twice from staff engineer. So I think IC8 was like, so let's go and put him on one of the projects we have that is like impossible and everyone thinks it's stupid. And yet his work-life balance is somehow reasonable. So certainly you have a pretty good balance. Yes.",
  " All the systems that have been building my whole career that I think are able to keep me here. Yeah, you probably want to know about it. I thought he had a really interesting note-taking system. And my note-taking system is actually in VS Code. And he shared a lot more than you might think. I'm also a bit of a loose unit and sometimes say dumb stuff. Here's the full episode. Your work has such insane blast radius because you got to IC8 or a principal engineer in the industry. On your path to IC8, what were you hired in as to meta?",
  " And maybe you can give a high level timeline of the teams you were on. Yeah, sure thing. Yeah, so I came into Meta as a six and actually joined Facebook groups at the time. So groups went from, I don't know, 10 or 15 people to like 700 in like two or three years. But yeah, so I joined right at the peak of it, like 700. Yeah. And I was on some team like groups integrity. It was actually pretty wild for me. I had a pretty slow ramp up to Meta because I joined when it was middle of COVID.",
  " COVID had just started, so they hadn't really figured out remote onboarding yet. So it was really slow. And then I joined my team and the election was coming, so no one could really ramp me up. So I was just kind of operating solo on like random stuff. So yeah, I had a really slow start to meta for most people. So I actually empathize with a lot of people that like took like a year to ramp up instead of like three months. Was your performance at risk initially because you were onboarding remotely or?",
  " and i managed to get like a meets all or something like this you know definitely wasn't excelling but i had a few little projects that like probably helped them sell that but yeah i'm pretty sure they told this like slow onboarding story during psc yeah which was kind of crazy uh especially because groups was like so critical at the time right they had so many engineers and right after that actually just i just decided to switch teams because i had some friends on instagram and they were like yo come and work on instagram web",
  " And this is, this has actually been a bit of a theme throughout my career. So I joined Meta to work on UIs, right? To work on web, to use React. I loved React. And I joined this group's integrity team. We weren't doing really any of that. Like I was doing it like 20% of the time, but most of the time with backend systems, right? So I was like, okay, cool. I'll move to this team. So is your background before Meta all more like full stack or front end work? Yeah. So I spent, I started coding at a really young age and it was",
  " on the front end and then when i went to companies i would like to do like front end product and every single company ever worked at moved me into like front-end infrastructure very quickly and then back-end infrastructure actually one of my big draws to meta was oh they're so big i'll always be able to work on front-end product right like specializing yeah and this thing continued where i got pulled into instagram now to do front-end product was like awesome within a couple months i was on the front-end infrastructure team yeah yeah in instagram and then yeah",
  " within like a year I was on the backend infrastructure teams and I was like, oh, it doesn't matter which company I'm at. How do you, how do you keep getting pulled to the backend? Like what is drawing you? I think, well, now, cause it's, you've done it so many times, you end up knowing like a lot about it and like all the different like architecture and the systems that you have to sort of put together. And it, it just, it is more impactful now, right? With the big switch to mobile, the only thing that's like rivaling it is the server, right?",
  " like web has become such a small amount of our traffic, you've got to go to where the more important stack is. I see. So generally you are picking projects based off of where the impact is and that is leading you to go to backend stuff or like. Yeah, exactly. Like on, at Instagram at web, we probably had like less than a hundred people would work on it, you know, around the company part-time. And on the backend, we have like 2,000, 3,000 engineers working on it. Yeah.",
  " So even from the engineering point of view. Right, right. So then you were IC6 on the group's team. You were onboarding slowly and you weren't liking it. It was this backend integrity system. You switched to Instagram web as IC6. Is that right? Yes. Okay. And so that's where your career started to really pick up. Yes. So I think I came in and like had all the skill sets. So I was like basically ramped up immediately and like landing impact immediately.",
  " And my managers on the team at the time recognized that I was like pretty strong. And we were, we were growing too. They were moving from one of our stacks to another stack. Right. And they were like, Hey, we're going to have like two or three teams. What do you think about like stretching to be the Uber TL across these teams? Right. Cause that's six to seven. Right. You're not on one team anymore. You're kind of leading like a bunch of teams. Right. And I was like, yeah, I think I can do it. So they kind of gave me the opportunity to like do that. Right.",
  " opportunity because yeah I think that's one of the big things people look for you know people who want to get to these levels they even if they want to sometimes they don't have the opportunity so yeah I'm curious what did you do that that you think made them come to you and say hey we want you to do the IC7 thing so when I was actually joining the team it was something that I was like looking forward to so I was like yeah I want the career growth right I think I can do this like I",
  " my previous companies i was actually leading four teams before i came to meta so meta likes to down level you right so i went from leading four teams to one team when i came to meta yeah so they were like yeah like we'll see what happens in the first month and if you're like crushing it we'll like give you that opportunity so i came in and in the first month like did what they needed so they like okay here we go so when you like even before you switched you said hey fyi i'm i'm eager for ic7 and yeah and so they knew that and",
  " They basically just gave you the opportunity and to see if you could do it. Yeah. So they knew that about me and then they knew that they needed it on the team too. Right. Right. Right. Right. So you talked about what is IC7 scope? What does IC7 scope look like? Yeah. So IC7 scope to me looks like, yeah. So six is like, you're basically like the TL of a team, right? Maybe 10, 12 people. It really depends on your team though. If you're on like a really complicated part of the stack or something, maybe your team skews differently.",
  " but generally like that or if you're on a really easy part maybe it's skews the other way but generally like yeah six is leading one team and then seven is like across multiple teams or across like a a different area right so then would eight be even just like another step of that progression yeah so eight just keeps going up too right for different teams like your blast radius and yeah this is all dependent on how important the problem is that you're working on right working on the back-end infrastructure right if you're impacting",
  " engineers by like making your frameworks better right and it's taking a lot to make those frameworks better right right you need like hundreds of people to make those frameworks better yeah like you're hitting pretty big blast radius yeah so then your archetype is leading through all that because there's also the other ones like framework specialists kind of someone that just digs deep somewhere and speeds up a thousand people but is not directing a thousand people maybe you can talk about like the archetypes yeah yeah yeah",
  " so this i'm talking yeah talking through one very specific lens yeah right so yeah there's all these ways that people can you know contribute to the business and like be having that large blast in fact and yeah the most extreme other end of the spectrum is like the specialties right so you've got the guys that are like i don't know deep on the compiler or like yeah they change like 10 lines of code down there and it saves the business you know hundreds of millions of dollars yeah like a fixer like the fixes yeah so",
  " You've got this range that you can do it in. And maybe they don't like talking to people, right? They don't like running around. But we still realize it's like really good value in having these folks around and give them the career path too. Yeah, yeah, definitely. Were you intentional about the archetype that you picked for yourself as you grew to ICA? So I guess not really. My philosophy is always just do whatever it takes to get whatever project I'm on done. But, you know, I'm leaning into my strengths and my strengths are like,",
  " talking to people like being able to yeah coordinate people i like to think i'm like fun and happy to be around which gives people like you know some motivation other than work to be there and like you know most of the projects i'm on a like marathon projects so we get to stick around for like a long time together and have some fun right so you're like a force multiplier like you take a group of people and you make them some percentage better because of you know your behaviors yeah maybe that maybe that's what happens but i",
  " I don't think about it like that. I'm just trying to get us all doing the same thing. Yeah. And I see the good in people, right? And I like see the strengths in people. I just want people around me to succeed. So I'm just trying to make them succeed. And I guess that ends up, you know, compounding and being best for all of us. Have you ever thought about management? Because like a lot of what you just described, I feel like there's some overlap there. I've done some brief stints in management before Meta. Yeah. And yeah, I think it's just, it's not for me because I like to",
  " able to then like if the project needs it go and like you know land 500 diffs in a couple of months or whatever yeah like go and land a ton of code yeah across the line i see you can't really do that right right management yeah i'm also a bit of a loose unit and sometimes say dumb stuff so i think i need it's better if i'm not in management and like yeah have people in management who can check me on that you know occasionally when it's needed right right right yeah that makes sense yeah i feel like you have to be a little more sensitive",
  " to things as a manager. Yes. Yeah. I noticed your internal profile said something like always open for a chat or something like that. But my view of an ICA is someone who's drowning in responsibilities and does not have time. Yeah. Why do you make time for, or, you know, make yourself available like that if your time is like so precious? So yeah, definitely, you know, you're getting worked a lot at ICA and you are overloaded, but yeah, I'll always make",
  " make time for someone who will, who is reaching out about something, right? You know, maybe, maybe I'll be completely overloaded and the meeting has to be like a few weeks from now, but there's a lot of value in being accessible to everyone. Right. Right. Like anyone can come to you and be like, Hey, I have this idea or I have this problem. Like, can you help me? And you're just like helping your org or you learn about a problem that you wouldn't have known about otherwise. Right. I kind of wondered though, cause someone like you's probably getting so many, you know,",
  " reaches, like, I would have thought you'd have to pick and choose a bit, you know, like, let's say intern comes to you and is just excited and wants a coffee chat or something in a, in a, in a nice, perfect world, you'd make time for them and you talk to them, but in a impact driven world, some things are going to need to be dropped. What are your thoughts on picking and choosing your time? Yeah. So I, I do try to put the levels thing",
  " of my head always so if an intern's company i try to treat them the same as everyone else so if they came and they were like asking good questions right or like you know you're giving you're telling them stuff and they're like acting on it and going for it you know i'm probably likely to give them more time again but if they come in and they kind of ignore it or they ask really bad questions and stuff yeah probably not likely to give them too much time again right this is assuming i had time in the first place yeah if i'm completely overloaded like",
  " It'll be like, hey, sorry, like, can we do it in a month? Or this is, here's another person that you can chat to, right? Who would probably be better and helpful. Right. Yeah. You mentioned. So just trying my best, I guess. Right, right. To a certain point. You mentioned bad questions and good questions. And I think a lot of people who are earlier in their career, that's something that they're thinking about a lot is should they ask or not what's good, what's bad? Yeah.",
  " haven't really thought about it too much but i don't i don't know just be be genuine right don't try and like script it or like pick up line it like yeah just be genuine about what you want to ask or find out yeah yeah because then naturally you'll find the right person right if you ask me one of these questions that is like very helpful for you and i know someone better who can answer it who has more time right then you're going to end up with someone better who has more time and it's going to be better for",
  " you in the long run yeah yeah yeah before we leave the ic7 ic8 yeah i'm curious you mentioned there was a big migration that got you promoted to ic7 and you were leading a few teams and your management chain said we need we need a leader and you were eager and you took that on what was it for ic8 yeah also just just on that like getting to the seven one you got to also land the project right right right",
  " yeah definitely i think something that happened that helped with the seven one is i was like sort of seen as this person that would like come in and like fix it or get it back on track right so we were doing this this back the the infra migration right and it was scoped at like two years or something yeah and we came in and it wasn't just me like i came in and like we all started chatting and stuff and we got excited and we actually ended up delivering like the majority of it in like six months oh wow it was like crazy no one expected that which meant that we can then move 90 of the",
  " sources yeah onto other stuff which actually let us put ads on instagram web the following half yeah which was also like a year behind and then we shipped it got on the team and shipped it in like three months which was kind of that's kind of crazy yeah so how how did you take something that was two years and make it happen did you cut scope or did you yeah what happened yeah we cut scope but i think more was just like everyone on the team got got hungry for it and was like yo two years is silly like we can do this sooner like",
  " we'd started to gel together right everybody was sort of playing to their strengths which you like here is pretty common and we're like yeah we can do this like way sooner than two years yeah yeah i think before we're going very serially too like we're doing like one page at a time yeah and someone was like yo why don't we do like 100 pages and we're like okay let's try it so then we tried it and it was like you know really hard at first because we've just done 100 pages but then we had all the like compounding effects of putting it all together so that was like accelerating us so",
  " like switching parts of the strategy too yeah yeah yeah yeah how did you get that team so excited about it i can't take all the credit because i don't know what happens these situations are organic you just start talking about it and then people like bouncing off each other and doing it but yeah i was just bringing some some of that hungry energy and i guess it was infectious and then everybody was like on board with it and we're all having fun and we're like yeah we want to do great and like because we shipped it early right it was it was good for me but it was good for everyone else too right yeah yeah",
  " yeah lots of promotions on the team yeah yeah and it's super deserving i mean that's insane business impact like such a huge yeah exactly yeah yeah because then we got ads on there and then i i can't remember but we're pulling in like a bunch of money on a surface that had never been monetized right right right which wasn't slated to happen for a long time yeah yeah yeah that makes sense so and that was the ic7 promo so that was the ic7 promo so i think ic8 was like at this point leadership like identifies you and like knows okay so jay",
  " is the type of person we can go and throw on problems that no one else really wants to work on or is like really hard to move or the rest of the org thinks is stupid and impossible so let's go and put him on one of the projects we have that is like impossible impossible and everyone thinks is stupid yeah yeah yeah which was like we're just on the front end moving it into the into the main meta stack right hey can you like move the back end into the main meta stack yeah and i was like cool that sounds impossible let's let's try that yeah and that's",
  " Yeah, you're aware of the details of the project, but that was an interesting one because, yeah, 95% of the engineering org was like, this is stupid. Why would we waste any resources on this, right? So we knew we wanted to migrate into the other stack, but we couldn't go out to the engineering org and say, hey, we're migrating because we'd get shot down and everyone would be like, this is the dumbest thing ever. And we'd kill morale for the org. So we're like, hey, what can we do? All right, everyone's having this problem with interacting between these two",
  " that we had right all right we're going to go and fix the devx between the two stacks and we made a big deal about fixing the devx between the two stacks yeah yeah for the first year i see yeah so i mean you said people would think it's stupid you're talking about the people who are using the existing ig backend stack and are used to it and they're saying well it works why switch over yes those okay yeah and so you had to you couldn't just immediately initiate uh migration of infrastructure",
  " thousands of engineers are using without bringing them along and saying look it's a good experience still yes yeah i think so so and also i kind of like at the time i like agree with those engineers right like the majority of our development is in this stack all our important surfaces are here like it's way better to be in one right i'm like yeah this is true but like our other stack was growing in usage there was already all this cross stuff happening so like i don't know",
  " 30 or 40 percent of the org were impacted by this right but it maybe wasn't hitting the point where it was worth justifying putting like 100 people on it to like move it move it all across right so we did the building blocks right like okay let's make the highway between the two better which is like no one's really going to argue against that because they're like they come across it occasionally and they're like oh that would make my life better so we'll do that and then on the other side okay there's stuff missing from dub dub dub so that was the first year and the second year it's like there's a bunch of",
  " stuff missing from www that doesn't make it feel like instagram let's go and add all that stuff in there so it's actually easier to build in there so that was year two we went and did that uh now we're in year three where it's like okay now we have these two things and during that time more of the cross stack stuff has happened right some surfaces did migrate because they were going to get bigger benefits uh now we've kind of got to the point where people are like okay we see the writing on the wall like how can we get",
  " there as fast as possible right and now we're in like full migration mode and so the ic8 promo because i guess the full migration is not fully complete but there was some milestone in this larger strategy that was worth an ica promo yeah i think so so i think this project like at some point someone came to me and was like yo should be running this project or something who's like a very senior engineer at uh meta like i don't know 10 or 10 or 11. he's been around a while yeah because the project was like it was",
  " It was so crazy trying to rewrite Instagram, right? Well, you know, the classic metaphor of like, you know, you're on the plane, you've got to switch the whole plane while you're still on it. Yeah. So yeah, this project was scoped at like, you know, many IC8s worth of scope or an IC9 or something. Yeah, yeah. And we only had sevens working on it at the time. So there was space for that if you're like going to do it. And then we had, we hit a couple of big milestones, right? So we had some of these surface milestones we had hit.",
  " well as we'd hit pretty big traffic ones so we'd hit like massive milestones right right but yeah that was still enough to be like okay yeah like they've done this is a lot of work yeah there's 150 teams involved there's like it's moving everything that is being moved is like you know 20 faster or it's like way easy to work on okay okay okay i mean yeah that blast radius is insane i mean yeah it makes a lot of sense yeah one thing i was curious about because you this is one of those",
  " switching out a lot of the infrastructure that people are using. How did you make sure all these engineers are happy with the tooling? Cause you're, you're switching it out while they're doing their day-to-day work. Did you, I don't know, have some sort of way to engage the community and keep them happy? Uh, yeah. So we have like, at Instagram, we have like a group of people we call our server champions. Oh, right. Right. And I think you have these like sort of horizontal groups in many orgs. I've had them at previous companies too.",
  " they're always called different things i don't know the server guild or whatever you just need when you have so many teams people from all around the org to kind represent the platform that you're working on and you want like some people from your infra teams but you want majority people from your product teams because infra teams can get quite disconnected from how day-to-day developments yeah yeah yeah so we had those folks so we would always like it's basically a continuous channel like we have a chat group and stuff right i think there's about 40 of us yeah so they're always giving us feedback we're always asking",
  " for feedback if stuff's coming up we're asking them to like let us know right like if someone on the team raises it to them let us know i think that's actually like probably our most important feedback channel we do have the big feedback channels of like you know the 2000 person groups where people can post in devx feedback like yeah but we find it has to be really bad by the time it gets posted in that group and we probably know about it already yeah yeah yeah whereas these server champion groups like we might know about it within an hour or two right of something",
  " out or breaking. Yeah. In addition to like all the metrics that we monitor, which are very helpful too. Yeah. Yeah. That makes sense. As you've grown from IC6 to IC8, you take on more responsibility. How's your, your like hours work per week changed over the, over time? Yeah. So I think sometimes I get really excited at work and I'll be like working like, you know, 60 hour weeks or something like that, 70 hour weeks. And then other times like, okay, let's get this back under control.",
  " and I'll like drop it down to like, you know, my 40 hour weeks or if it's during the summer and I worked 60 hour weeks during the winter, I'll be like, Hey, I'm going to do 35 hour weeks during the summer or something. Yeah. Yeah. So it does, it does fluctuate and depends on what the project's going on. But most of the time I am trying to target like the 40 hours a week. Cause I want that work life balance. I've got more to life than just working. Right. Yeah. Yeah. But yeah, if I get really excited, I might get into it. If I decide I need to do more personal, I'll like bow out of it. Yeah. Yeah. There's something you have pretty good",
  " balance then actually you're able to maintain your impact with a reasonable amount you're not going crazy yeah over the last six months yes and it's all the systems that have been building the whole my whole career that i think are like able to to keep me here yeah yeah you probably want to know about oh yeah i gotta know about these systems then what are these systems that are making you able to have this level of impact with that time investment so yeah the the thing is so definitely do shield my time so while i am open to people coming",
  " i do shield my time so i think like focus blocks or yeah like nearly 50 of my week is focus blocks so i try not to do any meetings on any mornings so i'm a morning person and get a lot done in the morning so i will not take meetings until after lunch yeah yeah and that's worked pretty well for me in addition to that i try to make it so wednesdays wednesdays and fridays i don't have any meetings yeah and then also i'll try to put all my one-on-ones on monday afternoons is there",
  " some specific reason for beginning of the week or just uh no nothing for beginning of the week i just picked a day that i was like okay i'm gonna just do these all in a block yeah and then that leaves basically tuesday and thursday afternoons for project meetings yeah yeah this doesn't always work right because yeah i was about to say there's every week there's exceptions to the rule but generally i find that shields a lot of my time so that i'm able to be able to do stuff to like move the projects forward that i need or like message people what i need to",
  " Okay, so focus time. What about, because you said sometimes you just really focus and you do 500 diffs in a couple months. When you're in that hyper productive coding state, how do you do that? Oh, okay. Yeah. So in times where I'm doing that, yeah, like I'll just disappear for like two or three weeks. Well, not disappear, but like I will cancel like lots of these meetings, right? Once the project's going and has momentum or something, you can like, you know, skip a few weeks of project updates.",
  " sync groups if we're all together and know exactly what we need to be doing. Yeah. So yeah, we'll cut out meetings. And I think I've been praised a little bit for like how few meetings I have on the teams and projects that I run. Like people are very surprised when they come in and learn that like this massive project doesn't have central meetings. Yeah. Yeah. Like there are no meetings. Yeah. Like people like, hey, I want to get involved. Can you add me to the syncs? I'm like, there are no syncs. Well, how do you, how do you keep, because those meetings have some value. So they have some value. So this,",
  " The work streams that need to have them will, but like overall and overarching, there isn't any. So there's not this tiered thing. It's like if you're on a particular work stream, right, there is one sync for that. Yeah, yeah. You don't have to go to like a series of syncs where it's like, okay, we need to go to this one and then I need to go to like this level one and this level one. Yeah, yeah. Yeah. Is there some high leverage like leads kind of meeting? So there isn't that yet, but there is probably a core group of like, you know, 15 TLs across the different areas.",
  " But we don't all just sit in a meeting and meet together. If we need to, we'll like chat in a group, but we don't even have a chat group. There's not even a chat. There's not even a chat group. It's all ad hoc as needed. It's all as ad hoc as needed. And like, if we need to have some of these conversations, we'll just push it into the wider forums. Yeah. Or if there does need to be a thing that's like sensitive or something, and we do need to chat about it together, we will do the ad hoc stuff. Yeah. Yeah. I like that. I mean, most recurring kids,",
  " Cadences are suboptimal because they're just static, you know? So they do kind of like that. Yeah, yeah. So this is part of the philosophy too. So always be available, right? So if someone needs to talk to me that day, I will find time to like talk to that person, right? Yeah. Whether it's like I have to be out, I'm out going for lunch or something. I'll take the phone call. Like I'll do meetings in all sorts of weird places to make sure that people like have the info they need and they're on the floor. Right, right, right. And in those times where you're a coding machine,",
  " Are you also diff review machine and what's it look like? Yeah, whatever's needed. I actually usually when I fire up, I'm getting in the zone. I'll quickly I'll go to the diffs first because anyone who's got a needs review diff, right? Like they're semi blocked or like they're not being able to land what they're landing. So yeah, I'll go through all of that first. Get that in before I even start coding myself and every hour I'll go back and check again. Yeah. Yeah. Oh, wow. So you're like really on top of diff review though. Really on top of diff reviews. Yeah.",
  " I think there's probably lots of memes floating around for me because like people put up diffs and like five minutes later it's like stamp on me and they're like what the hell is going on and that's a lot because I'm on top of it but also because I have this philosophy on like diff reviews and risk where yeah if like a if I don't think the diff is risky right you're getting a very rudimentary review and like basically you can put that code in like so if it's like gated if it's not on a core system right these things then you're gonna just get a very high",
  " level diff review and then basically i'm just like trusting you so um you're saying you you modulate your level of time investment based on how risky the diff is based on how risky the diff is right so if you're rewriting it right where it's all gated right now and we just want the high level trunk architecture to be correct if you're working on like some child component or something it's like cool it's gated it's not critical to the system yeah yeah i'm trusting you to do whatever you need to do over there so you'll just stamp it so just stamp it",
  " yeah some people view quality diff review is a uh like an important thing rather than just them so you ever get pushed back so this is my controversial one okay for sure so yeah so i i think that is correct for like the the trunk of the system the core core parts of the system or anything that's already live in prod like is going to get pretty thorough review yeah if it's not live in prod and it is one of these sub like sub parts of the system or less critical things like i'll still",
  " gimmick to make sure you didn't do anything like absolutely crazy like introduce like i don't know security issues or you know start mining crypto on our servers or something but uh yeah i'll just like let let that let that fly in yeah i i think it makes sense you're basically trading off speed for i guess quality but it's not dumb quality it's like these are places where it makes sense to make the trade-off where you make yeah so you can have like lower quality components",
  " like these the child the child parts of the system right or the leaf parts of the system and also these parts are like generally easier to unit test yeah if they do fail they only blow up like a small part of it right just a little block just a little part of it if it is badly architected it's only on this like tiny part of the system it's not impacting you know hundreds of engineers maybe it impacts a couple yeah and someone one day is like what the hell's up with this yeah it doesn't take a long time to rewrite right right you mess up the architecture on the core trunk probably takes like hundreds of",
  " people a long time to like fix yeah yeah yeah have you have you ever had someone i remember early in my career i was all about speed and i was approving some diffs and then someone would come back to me and say why'd you approve this that was too you know like let's slow down a little bit yeah you ever get some feedback or someone says hey you know calm down like this definitely happens actually interesting thing so teach the people close to me in my team",
  " that like hey it's okay buy stamped your diff to like put it back in review again if you actually need deeper review or like flag it flag it in the summary or the test plan like or comment on it like hey i'm actually looking for a deep review on this if you know that's how our team operates now yeah and this is actually really good because i might have thought it's like a child part of the system and maybe it is still a child part of the system but they've thought hey this is like could be like more performant or like i actually want you to double",
  " check this so then we use that signal to be like okay this person actually wants things so if i missed it even if they put a comment on it they'll throw it back into review and like be like need real review or something like that because they knew they knew what happened yeah yeah yeah i see that makes sense but yeah there's definitely this is not the philosophy of everyone at meta right like we most people it's like quality high quality for everything yeah and it depends on the system though depends on the system also depends on like this is like trust you build on your team too yeah yeah and you're on the team",
  " team probably not going to get this treatment for the first couple of weeks yeah although I do want to defer to like how do I accept this diff not how do I reject this diff which I think is an important philosophy to have why is that yeah um because like I'm not trying to like knit your code and get you to write it the exact way I would write it right I'm trying to be like okay what is absolutely blocking this thing from going to going to production like big high level architecture things like I don't know some critical bugs",
  " Like, is it going to blow up prod, right? Not like write it exactly the way I would write it. Right. I think that takes a while to get to, too, right? Like more senior engineers usually become amenable to this. Yeah. But when you're in, yeah, when you're like in the first five years of your career, maybe you've only seen a few ways of writing it right. So you want people to write it that exact way. Yeah, yeah, definitely. I think when you are working in a team where there's high trust and you get to the point where people, they have feedback, but they accept with nits, you know,",
  " that because yeah everyone's just trusting you know move fast yeah and i have some feedback but it's not that important it's just like take it if you will man this is where i push that needle even further again so i'll like even if i see your diff is going to blow up production i will comment on it and be like this is going to blow up production and then accept it and be like yeah make sure you fix that first right yeah and like i've never had a case where someone's like landed it yeah like with a comment on it that says hey this is going to blow up production because you",
  " can can you imagine like sitting in sev review or something and someone's like the diff had a comment on it this is gonna pop yeah yeah it's wild that you accept that though yeah except i just trust them to fix it right yeah yeah yeah fix it the right way once again if they have trust if it's like a new person on the team and i'm not sure if they're gonna fix it the right way yeah yeah right i might be like ping me again when it's like ready yeah yeah but yeah 99 of the time i'll just like accept and go yeah and yeah haven't had to do the thing where i pull back because i've never had one that's",
  " been shipped accidentally exploded yeah action and that's actually a little bit of philosophy i use across like i guess building these systems judging how fast i'm moving yeah if i'm doing something and it's not i'm not getting feedback that it's like broken or i'm not seeing negative effects from it right even if it is controversial and crazy yeah yeah i'll keep pushing the boundary on it right uh yeah same as our rollouts like if we're at one percent we're getting like very little feedback and like metrics are looking good and we might move to like ten percent the next day",
  " And people are like, that's crazy. Like step to like two, three, five things. It's like, well, we're not getting any like signals that it's not going poorly. As soon as we get signals that it's going poorly, we start pulling back. But otherwise I find you like move too slowly. You want to be moving at like the fastest speed you can without ruining things. So if you're not getting, if you're not making anything worse, like keep trying to find that edge. Yeah. I had a tech lead early in my career and I had taken down Prada.",
  " or something and I was talking to him about it and he, yeah, on one end you shouldn't break prod generally, but he also said if you never break prod, you're probably, that's probably not also optimal. Like there should be some level of risk, otherwise you're moving too slowly. And so. Yeah, exactly. Yeah, try not to break prod, but if you never break it, you're probably like very slow. Yeah, and if you're breaking it every day,",
  " probably yeah they're going way too fast yeah exactly yeah we need to fix something do you use um ai at all yes i've been i use it i use chat gpt like i don't know 10 times a day outside of work and then internally we have like our own things that i use too but i think it's great right like just like harness the tools that are coming they have a bunch of caveats and they make mistakes and stuff but like i don't know if i had to use if someone said don't use a calculator i'd be like what the use the tool the tools there figure out a way to",
  " use it, right? Yeah. Then maybe we won't get replaced if we become masters of the tools. Yeah, yeah, yeah. Exactly. Exactly. Yeah. I wanted to talk about being a tech lead a bit because I feel like that's one superpower that you have. To start, what would you say is the role of a tech lead? Like what are the important things to do and how do you see that role? Yeah. So yeah, people probably have a different opinion on this all over the place, but yeah, mine is just like, okay, you're the tech lead. You're responsible for this project now, right? Like do whatever it takes to get this project done.",
  " Usually the highest leverage thing you can be doing is like making sure everyone else is like contributing to the project and moving in the right direction. Right. But sometimes you might have to switch and do other things like writing code or jump into fixer mode. There's been a few times where I've had to like, no one else can debug what this thing's doing. So I've spent two weeks chasing like the craziest bug through the system to like find that line of code that's messing up. At this point, you've probably coached tech leads because you're in a position with leverage. Yeah.",
  " common mistake you see people make if they're transitioning into more of a leadership role. I think getting like kind of disconnected from what the what the goal is of the project, right? It's so easy to get caught up in the day to day operations of like we need to be doing this and need to be doing why and like lose track of the fact that like the direction we're heading in might have actually shifted a little bit. And it's like your responsibility to like shift the team towards towards the goal again. Right. Right. I know I met a regardless of how high level you are,",
  " expected to make technical contributions. But generally there is a sentiment of as you become a higher and higher tech lead, you get further and further from the code and more in doc work and leadership meetings and things. How do you strike that balance? Yeah. So it's definitely is a hard balance to strike, but I'll still, I'll still write code probably nearly, nearly every week, even if it's like a small amount of code, because then I'm using the full tool chain.",
  " often it's because no one else wants to do it or it's something that you know maybe i'm going to do it 10 times faster because i know know that thing and i don't want them to waste a week on it so i'll go and do it right yeah so i just i just like find the time and those focus blocks and stuff help with that too right and it might if it gets to wednesday and i haven't written code and nothing's come up i might go and do that yeah this is all caveated on the fact that i'm always trying to work on what i think is the most important thing right like if it was saving that person you know",
  " their whole week of doing it's going to take me an hour i'll go into yeah but there might be periods of time where we're doing a big review or you know we're going to get a headcount injection or i don't know we need to be doing x y or z and then that's way higher leverage for me to be spending my time on and i won't code for a few weeks right right how do you i think this is more you know junior people lack this but how do you develop that skill of seeing what is impactful with your time you know where's the roi where'd you learn that yeah i think it's",
  " uh i don't know just like practice yeah this makes perfect and you've seen a lot of scenarios so you kind of know right which one after a while yeah but yeah when i didn't have that gauge and i still use this a little bit now it's always like what do i what do i think myself is really important that no one else is willing to work on yeah and that's usually the area i would go to before i had developed like a good sense of it because now there'll be sometimes where i'm like oh no one's working on it because it's stupid but like yeah if i",
  " really think it's really important, I will like find a way to work on it. Yeah. Oh, interesting. Yeah. There's a famous essay inside a workplace somewhere and the title of it is like, go where you're rare or something like that. And this kind of reminds me of that. It's a scarce thing that you could solve that problem. And yeah, it makes sense. Man, I haven't seen that essay. I love that. Yeah. Yeah. There's a lot of gold in workplace. There is a lot of gold.",
  " essays and workplace yeah they're buried somewhere in there there's another one from one of our like i don't know ic10s that we have at the company who talks about the 20 of the time he just works on stuff that like he's never going to get credited for right it's like the kind of org contributions or if you get very senior it might be the code contributions because like they don't really care if i code yeah yeah or not anymore right what's the rationale that if you're always if you spend 100 of your time working on stuff that you",
  " get credited for you're probably dropping a lot of stuff right and i see i see it happen like someone might come and be like hey can you like help me with this thing or something like that and i'll be like well i'm no i'm never going to get credit for this so i just say no to them but there was actually a lot of value in helping that person i'm just like when performance comes around no one's gonna be like oh he helped this person cool so i actually like that kind of mindset and it was kind of how i was operating before i read this too but like yeah 20 or 30 percent of my time yeah i would just do",
  " things that I know I'm not going to get credited for. Yeah. Yeah. PSE is all about doing things that are measurable. Yeah. There can be a hundred little things that you help people with that made them 5% better or something. Yeah. That's not going to be in your PSE because your PSE is probably just giant migration item, giant, you know, this, giant that, not all those little things. Not all the little things. And like those 20 or 30%, you want them to, from your point of view, you think they're valuable, right? But just no one else is going to think they're valuable. Yeah. Yeah.",
  " I think helping that person's value, I think doing things for the org, the wider org, I think having some coding time is valuable, right? Yeah, yeah, definitely. Other people, like, probably not. Yeah, yeah. I think also early in my career, I worked so much extra hours just doing whatever people gave me that I do think it actually became valuable at a later time. I was credible and known as someone who's just going to unblock you no matter what, be responding late or whatever.",
  " just because I was into it. So there's like hidden things outside of PSC that... Yeah, and then that becomes valuable, right? Yeah, and then that becomes value, yeah. Like a lot of people appreciate the fact that I'm a senior engineer who still codes. I think we talked about the work diary thing. I wrote something about how it's important to have some documentation of the things you're landing or the state of investigations, et cetera, and the value of writing. What's your process for keeping track of your work in writing? Oh, yeah.",
  " So basically I have a really good note taking system because I'm terrible at remembering things. So, and my note taking system is actually in VS code. Oh really? Yeah. So I just have another VS code instance spun up so I can have two running or whatever. It's just a text doc. It's just a text doc. Okay. Yeah. And, uh, so I'll have it and I don't, I don't actually use multiple monitors. So I just have like the workspace thing or whatever on Mac where I can just use a couple of fingers and it just flicks across. Oh, I like that. Okay. Yeah. So it's always very easily accessible.",
  " and i'll just dive across and i'll have i'll create a new readme file in one folder i don't have the whole i don't have a folder archive it's just one folder and i'll have like yeah like current project name or something just saved in there yeah and that way i can like search for a file name in like two or three characters and jump between file names so i have now on there there's probably like tens of thousands of files because i have no for everything on there yeah but i this is my like indexed way of",
  " like sort of jumping between lots of thoughts yeah and writing them down and then i have like keyboard shortcuts reading inserting like the current date and time yeah right so i can like kind of index it on that oh wow it's like an extension of your brain it's like yeah you're just constantly noting things down just constantly noting it down and i don't have to spend any time organizing it right because there is no folder structure just one giant thing the only thing that it's organized by is like searching for a file name or you can use word search right yeah",
  " control f yeah control f but most of the time i'm like have a pretty good idea of what thing i saved it under right yeah so every one-on-one there's like a name of a person right right right right every project there's one i have like a couple of root level ones like priorities right work there's priorities so then in there i'll have these the timestamp each day these are the priority things write some memos for me up the top like you know don't spend time on x right or like this year don't spend time on this like yeah focus on y",
  " Yeah, yeah. Which is actually helpful reminders because I'll jump in there once a week and be like, oh crap, I'm trying to break that habit. Yeah, yeah. I'll get out of this. So I guess that's you writing things in and cataloging. Yeah. When you pull, like, let's say you're writing your performance review. That's one reason people like use. So you just kind of dive through there. Is there like one that's like achievements or like? So I've only once in my career for a year kept track of the projects and stuff that I did.",
  " Yeah, this year I'm not keeping track again. So yeah, I don't keep track of what is actually happening on the day-to-day. At the end, I'll try to figure it out. Which has downsides, right? It takes a whole day to figure out what you did for the year. But yeah, I just haven't found value in tracking everything each day. Because I already have this system of what I need to do on the day-to-day. Yeah, I mean, dailies would probably be too much anyways. I always liked writing launch posts because at the end of the year, I just scroll through.",
  " through what just every launch post is like a bullet in my PC. So. That's a good one. I like that. Because you got to put those out anyway, right? Yeah, you got to put those out anyways. So it's just like, I'll just look at those later. Yeah. Okay, I like that note-taking. It's simple. It's simple. And then the other thing that's part of it is there are links between the files. So I have a VS Code extension, which lets me put links between the files very easily. Yeah, yeah. So I can just, I don't know, it's like I press one key and same,",
  " using everything based on the file name right i just like start talking file name bang it's linked yeah so that's the way that it's kind of organized i can like jump between these thoughts or whatever yeah and then it actually has a the same vs code extension has this thing where you can view it as a graph so if you started linking all your files together you can then view graph and see how you've like organized your mind and you're like holy but that's gimmicky like i never use it but like occasionally you fire it up you're like wow it's like your own internal wikipedia like",
  " what you got going on. Yeah. Like linking between thoughts. Yeah, exactly. And then once you've been doing it for a while, now I've been doing it for like 10 years or something. It's just like 10 years of thoughts. And I have all my personal stuff in there too, right? Which is kind of weird because then you see the work and the personal overlap at some point. Yeah, yeah, yeah, yeah. I wonder if you could feed it to an alum one day and it can be useful or something. You can retreat from it easier. Yeah, yeah. It'll like know everything about me. Yeah, yeah, yeah. Because it's got my diary in there too.",
  " Yeah. All sorts of things. Yeah. Oh, that is so cool. I see we're like low on time. So the last thing that I want to ask you is let's say you were going back into the industry. This is like you just graduated college. Yep. And you were going to give yourself some advice. What would you, what would you say? Oh man. Well, okay. Go where you're valued. I've seen lots of people go onto teams where they're not valued. Like, what do you mean they're not valued?",
  " you're you're really good at working on front end right and then you end up on a back end team and all of a sudden your performance is crap or like you're really good at fixing or like you like working on framework things and you're on a product team and you're like constantly tweaking frameworks and making them better and then you get a really bad rating at the end of the year even though you landed like 500 diffs or something yeah yeah like go into the environment in which like you're valued and maybe you end up being an environment you're not valued in for a year but just like recognize that and get out of it right right",
  " So I think like lean into your strengths, basically. Yeah. You're you're trying to lean into your strengths, but your management chain or your team around you doesn't care about your strengths. Right. Go and find a team that likes your strengths and go there. Right. And you're going to be way happier. It's going to work much better for you. Yeah, definitely. And it seems like your career, that's kind of where it started. You made that jump into a web team. Yeah. Instagram. You're excited about it. And you just kind of went up from there. Yeah, exactly.",
  " philosophy is just like I don't know be nice be be good what's the word have have fun like I I'm always being a joker right like even even when I'm talking to leadership or like writing out these big posts right like most of the time they're not super professional I'm trying to be like you know have a little bit of fun with it yeah be be simple right don't over complicate your posts right right right I mean a lot of people they present like a",
  " a work you know a work yeah form of themselves and then uh you know outside of work they're a different person yeah so yeah i try to try to meld those things for me i try to do the do the same thing because that's like kind of true to me and like i think makes makes work more interesting and like we're having to work on it yeah yeah spend a lot of time here right it'd be more fun but i wonder why there's got to be some trade-off because it seems like so many people are yeah what's the trade-off i think like depending on the type of",
  " you are, sometimes I can end up saying really dumb stuff, right? And then the way that I've had to counter this at work, people know that, like, oh, Jake's very nice and if he says something dumb and you tell him, he'll be like, oh yeah, shit, sorry, that was dumb and apologize for it. Stuff like this. Obviously, you can't go out and say really crazy stuff, but thankfully I don't do that in my personal life anyway. But yeah, I try to bring my, like, I don't know, myself to work.",
  " and so I'm not selling anything and I don't have any sponsors. But if you want to support the podcast, please drop a like if you're on YouTube or wherever you're listening to this. If you're on Spotify or Apple Podcasts, if you could leave a review, that would be much appreciated. And I'm always looking for new people to interview. So if you have any suggestions on that, people you think would be interesting to bring onto the podcast, please let me know with a comment and I'll take a look."
]
